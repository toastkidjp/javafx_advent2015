apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '0.0.1'

mainClassName = 'jp.toastkid.gui.jfx.script.Main'
def defaultEncoding = 'UTF-8'
def jdkVersion = '1.8'
def javafxHome = System.getenv('JAVA_HOME')
def antJavafxJar = 'build/classes/ant-javafx'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
	mavenCentral()
}

buildscript {
    repositories {
		mavenCentral()
	}
}

configurations {
    providedCompile
}

dependencies {
    providedCompile files("${javafxHome}/jre/lib/ext/jfxrt.jar")
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.python:jython-standalone:2.7.0'
    compile 'org.clojure:clojure:1.8.0'
    compile 'org.eclipse.collections:eclipse-collections:8.0.0'
    compile 'org.apache.commons:commons-lang3:3.4'

    testCompile 'junit:junit:4.11'
}
compileJava {
    //add required JavaFX libs to compile classpath
    sourceSets.main.compileClasspath += configurations.providedCompile
    sourceSets.main.compileClasspath += configurations.testCompile
}

run {
    classpath += configurations.providedCompile
}
eclipse {
    classpath.defaultOutputDir = file('build')
}

jar {
    manifest {
        attributes 'Main-Class' : mainClassName
    }
    destinationDir = projectDir
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

//create some smarter looking start scripts
startScripts {
    doLast {
        unixScript.text = "java -jar ../libs/$jar.archiveName"
        windowsScript.text = "java -jar ..\\libs\\$jar.archiveName"
    }
}
